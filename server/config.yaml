system_message: >
  You are a helpful assistant that answers questions about cities.  It is usually a two step process
  to lookup numerical values like population.  Use "lookup_city" to find a geokey for a city.  Then
  use "lookup_value" to lookup a value like population.  For example, if someone asks "What is the
  population of Palo Alto, California"?  You will call:
  
  lookup_city("Palo Alto", "CA")
  lookup_value("0655282", "Population")
  
  The first call returns city_geokey for you ("0655282") and the second call returns the population
  that was requested (e.g. 67901).
  
  When it comes to value types, here are display instructions:
      
  Population and PopulationMedianAge are integers.  Sample display: 28,405
  Rate and Ratio values are percentages (0-100).   Sample display: 54.3%
  MedianHomeValue and PerCapitaIncome are $ values.   Sample display: $123,456

functions:
  lookup_city:
    description: >
      Lookup the JSON specification of the given city and state.

      %s

      Here is a sample return dict:
      
      {
          'city': 'Palo Alto', 
          'city_geokey': '0655282', 
          'county': 'Santa Clara', 
          'county_geokey': '06085', 
          'state': 'CA', 
          'state_geokey': '06', 
          'longitude': -122.1430195, 
          'latitude': 37.4418834, 
          'source_table': 1
      }
      
      The geokey keys are used to lookup values using the "lookup_value" function, which can lookup
      socio-economic values for the city, county or state (using their geokey).
      
      The returned JSON spec (dict) also teaches you values like: county, latitude and longitude.
      
      An empty dict {} is returned for not found.

    args: >
      Args:
        - city (str): The name of a city, e.g. "San Francisco".
        - state (str): The 2 capital letter code for the state, e.g. "CA".  
                      If a user specifies the full state name (e.g. "California"), pass it in here as "CA".
                      If the state is not specified, do your best to infer it.

    parameters:
      city:
        The name of the city to lookup, e.g. "San Francisco".
      state: >
        The 2 capital letter code for the state, e.g. "CA".  
        If a user specifies the full state name (e.g. "California"), pass it in here as "CA".
        If the state is not specified, do your best to infer it.
      required:
        - city
        - state
  
  lookup_value:
    description: >
      Fetch the latest value for the passed in type for the city (or county or state)
      identified by geokey.

      %s
                        
      Here is a sample return dict:
      
      { 
          'geokey': '0655282', 
          'type': 'Population', 
          'date': '2022-01-01', 
          'value': 67901.0
      }
      
      The date tells you the date of the latest reading.
      
      An empty dict {} is returned for not found.

    args: >
      Args:
      - geokey (str): The geokey for the city (or county or state).  The "lookup_city_tool" tool can be used
                      to find geokey.  For a city, geokey is FIPS State code + FIPS City code, so the user
                      could also simply used the Geokey in a question without looking it up.
      - type (str): The type of the value being looked up.  Available types are:
      
          Population
          BachelorsRate
          BelowPovertyRate
          LaborForceRate
          MedianHomeValue
          PerCapitaIncome
          PopulationMedianAge
          RentOccupiedRatio
          UnemploymentRate

    parameters:
      geokey:
        The geokey for the city (or county or state).  The "lookup_city" function can be used
          to find geokey.  For a city, geokey is FIPS State code + FIPS City code, so the user
          could also simply used the Geokey in a question without looking it up.
      type: >
        The type of the value being looked up.  Available types are:
    
          Population
          BachelorsRate
          BelowPovertyRate
          LaborForceRate
          MedianHomeValue
          PerCapitaIncome
          PopulationMedianAge
          RentOccupiedRatio
          UnemploymentRate
          
        The meaning of the type names is self-explanatory.

      required:
        - geokey
        - type